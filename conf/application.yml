---
spring:
    profiles: prod
    devtools:
        restart:
            enabled: false
        livereload:
            enabled: false
    datasource:
        type: com.zaxxer.hikari.HikariDataSource
        url: jdbc:mysql://localhost:3306/integrator?useUnicode=true&characterEncoding=utf8&useSSL=false
        username: integrator
        password: Metatron123$
        hikari:
            data-source-properties:
                cachePrepStmts: true
                prepStmtCacheSize: 250
                prepStmtCacheSqlLimit: 2048
                useServerPrepStmts: true
    jpa:
        database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
        database: MYSQL
        show-sql: false
        hibernate:
          naming-strategy: org.hibernate.cfg.EJB3NamingStrategy
          naming:
            physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
        properties:
            hibernate.id.new_generator_mappings: true
            hibernate.cache.use_second_level_cache: false
            hibernate.cache.use_query_cache: false
            hibernate.generate_statistics: false
    mail:
        host: localhost
        port: 25
        username:
        password:
        sendAsMail: "Oozie Notification <no_reply@localhost>"
    thymeleaf:
        cache: true
    http:
      multipart:
        max-file-size: 1000Mb
        max-request-size: 1000Mb
    activemq:
      broker-url: tcp://localhost:61616
      topic: metatron
      user: metatron
      password:
    jms:
      pub-sub-domain: true
    hadoop :
      url : http://localhost
      user.name : root
      nameNodePort : 50070
      dataNodePort : 50075
      dataNodeUrlUsed : true
      defaultPath : /webhdfs/v1
      tunneling : false
    oozie :
      oozieUrl : http://localhost
      ooziePort : 11000

      timezone.offset : T+0900
      timezone.location : Asia/Seoul

      hdfs.workflowSavingPath : /user/metatron/integrator/workflow
      hdfs.coordinatorSavingPath : /user/metatron/integrator/coordinator
      hdfs.taskSavingPath : /user/metatron/integrator/task
      hdfs.defaultPath : /user/metatron

      jobConf.nameNode : hdfs://metatron-cluster
      jobConf.jobTracker : localhost:8032
      jobConf.oozie.use.system.libpath : true
      jobConf.oozie.libpath : /user/oozie/share/lib
      jobConf.impersonate.mode : true
      jobConf.impersonate.name : metatron
      jobConf.defaultQueue.name : default

    hive :
      hiveUrl : localhost
      hivePort : 10000
      hiveDefaultDB : default
      hiveUser : hadoop
      hivePassword :
    spark :
      sparkUrl : spark-server
      sparkPort : 7077
    druid:
      userid: admin
      password: admin
      discoveryUrl: http://localhost:8180
      authorization: Basic cG9sYXJpc19jbGllbnQ6cG9sYXJpcw==
      jarPath: /user/metatron/integrator/ext_scripts/metatron-integrator-druid.jar

liquibase:
    contexts: prod

notification:
  slack:
    webhookUrl:                       # Setup & Configure Incoming-Webhook URL in Slack > Apps
    botName:                          # (Optional) if empty, use default value that configured in Slack App
    botEmoji:                         # (Optional) if empty, use default value that configured in Slack App
    notiChannel:                      # (Optional) if empty, use default value that configured in Slack App
  sms:
    requestUrl: "http://sms-server/esc-channel/etc/sms/sendsmsinfo"
    senderNumber: "01000000000"        # The message sender's number
    receiverNumber: "010000000"

security:
  basic:
    enabled: false
  oauth2:
    # OAuth 서버 Client 정보
    client:
      client-id: polaris_client
      client-secret: polaris
    resource:
      token-info-uri: http://localhost:8180/oauth/check_token

logging:
    level:
        ROOT: INFO
        com.sample: INFO
        io.github.jhipster: INFO

server:
    port: 8280
    compression:
        enabled: true
        mime-types: text/html,text/xml,text/plain,text/css, application/javascript, application/json
        min-response-size: 1024

jhipster:
    http:
        version: V_1_1 # To use HTTP/2 you will need SSL support (see above the "server.ssl" configuration)
        cache: # Used by the CachingHttpHeadersFilter
            timeToLiveInDays: 1461
    mail: # specific JHipster mail property, for standard properties see MailProperties
        from: sample@localhost
        base-url: http://my-server-url-to-change # Modify according to your server's URL
    metrics: # DropWizard Metrics configuration, used by MetricsConfiguration
        jmx.enabled: true
        graphite:
            enabled: false
            host: localhost
            port: 2003
            prefix: sample
        prometheus:
            enabled: false
            endpoint: /prometheusMetrics
        logs: # Reports Dropwizard metrics in the logs
            enabled: false
            report-frequency: 60 # in seconds
    logging:
        logstash: # Forward logs to logstash over a socket, used by LoggingConfiguration
            enabled: false
            host: localhost
            port: 5000
            queue-size: 512

zuul:
  routes:
    oauth:
      path: /oauth/**
      url: http://localhost:8180
      sensitiveHeaders: Cookie,Set-Cookie
      stripPrefix: false
    stomp:
      path: /stomp/**
      url: http://localhost:8180
      sensitiveHeaders: Cookie,Set-Cookie
      strip-prefix: true
    api:
      path: /api/**
      url: http://localhost:8180
      sensitiveHeaders: Cookie,Set-Cookie
      stripPrefix: false

application:
